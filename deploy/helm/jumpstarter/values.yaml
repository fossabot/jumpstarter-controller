## @section Global parameters
## @descriptionStart This section contains parameters common to all the
## components in the deployment.
## @descriptionEnd
##
## @param global.baseDomain Base domain to construct the FQDN for the service endpoints.
## @param global.namespace Namespace where the components will be deployed.
## @param global.storageClassName Storage class name for the PVCs.
## @param global.storageClassNameRWM Storage class name for multiple reader/writer PVCs.
## @param global.metrics.enabled Enable metrics exporting and service
## @param global.timestamp Timestamp to be used to trigger a new deployment, i.e. if you want pods to be restarted and pickup ":latest"

global:
  baseDomain: jumpstarter.my.domain.com
  namespace: jumpstarter-lab
  storageClassName: standard
  storageClassNameRWM: standard
  metrics:
      enabled: false
  timestamp: "" # can be used to timestamp deployments and make them reload

## @section Jumpstarter Controller parameters
## @descriptionStart This section contains parameters for the Jumpstarter Controller.
## @descriptionEnd
##
## @param jumpstarter-controller.enabled Enable the Jumpstarter Controller.

## @param jumpstarter-controller.image Image for the controller.
## @param jumpstarter-controller.tag Tag for the controller image.
## @param jumpstarter-controller.imagePullPolicy Image pull policy for the controller.

## @param jumpstarter-controller.controllerSecret Secret used to sign tokens for the controller.
##                                                If not set, a random secret will be generated.
##                                                Please fill in to deploy from ArgoCD or the secret will be regenerated for each sync.
## @param jumpstarter-controller.routerSecret Secret used to sign tokens for the router.
##                                            If not set, a random secret will be generated.
##                                            Please fill in to deploy from ArgoCD or the secret will be regenerated for each sync.
## @param jumpstarter-controller.namespace Namespace where the controller will be deployed, defaults to global.namespace.

## @section Ingress And Route parameters
## @descriptionStart This section contains parameters for the Ingress and Route configurations.
## You can enable either the gRPC ingress or the OpenShift route but not both.
## @descriptionEnd
##
## @param jumpstarter-controller.grpc.hostname Hostname for the controller to use for the controller gRPC.
## @param jumpstarter-controller.grpc.routerHostname Hostname for the controller to use for the router gRPC.
##
## @param jumpstarter-controller.grpc.tls.mode Setup the TLS mode for endpoints, either "passthrough" or "reencrypt".
## @param jumpstarter-controller.grpc.tls.controllerCertSecret Secret containing the TLS certificate/key for the gRPC endpoint.
## @param jumpstarter-controller.grpc.tls.routerCertSecret Secret containing the TLS certificate/key for the gRPC router endpoints.
##
## @param jumpstarter-controller.grpc.endpoint The endpoints are passed down to the services to
##                                           know where to announce the endpoints to the clients.
##
## @param jumpstarter-controller.grpc.routerEndpoint The endpoints are passed down to the services to
##                                                 know where to announce the endpoints to the clients.
##
## @param jumpstarter-controller.grpc.ingress.enabled Enable the gRPC ingress configuration.
##
## @param jumpstarter-controller.grpc.mode Mode to use for the gRPC endpoints, either route or ingress.



jumpstarter-controller:
    enabled: true

    image: quay.io/jumpstarter-dev/jumpstarter-controller
    tag: ""
    imagePullPolicy: IfNotPresent

    namespace: ""
    controllerSecret: ""
    routerSecret: ""

    grpc:
      hostname: ""
      routerHostname: ""

      endpoint: ""
      routerEndpoint: ""

      tls:
        mode: "passthrough"
        routerCertSecret: ""
        controllerCertSecret: ""

      mode: "route" # route or ingress
