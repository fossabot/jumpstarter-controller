apiVersion: apps/v1
kind: Deployment
metadata:
  name: jumpstarter-controller
  namespace: {{ default .Release.Namespace .Values.namespace }}
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: jumpstarter-controller
    {{ if .Values.global.timestamp }}
    deployment.timestamp: {{ .Values.global.timestamp | quote }}
    {{ end }}
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
      {{ if .Values.global.timestamp }}
        deployment.timestamp: {{ .Values.global.timestamp | quote }}
      {{ end }}
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: tls
        secret:
          secretName: jumpstarter-tls
      containers:
      - args:
          - --leader-elect
          - --health-probe-bind-address=:8081
          - -metrics-bind-address=:8080
        env:
        - name: GRPC_ENDPOINT
          value: {{ template "controller.endpoint" . }}
        - name: GRPC_ROUTER_ENDPOINT
          value: {{ template "router.endpoint" . }}
        - name: CONTROLLER_KEY
          valueFrom:
            secretKeyRef:
              name: jumpstarter-controller-secret
              key: key
        - name: ROUTER_KEY
          valueFrom:
            secretKeyRef:
              name: jumpstarter-router-secret
              key: key
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tls
          mountPath: "/etc/jumpstarter/tls"
          readOnly: true

        image: {{ .Values.image }}:{{ default .Chart.AppVersion .Values.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 256Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
